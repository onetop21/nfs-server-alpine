name: Docker Image CI

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: nfs-server-alpine

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build --tag $IMAGE_NAME .
    - name: Log into registry
      run: >
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Fetch image name
      id: image_name
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        
        echo ::set-output name=result::$IMAGE_ID

    - name: Fetch version (Release)
      id: release_version
      if: github.event_name == 'release'
      run: |
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        
        echo ::set-output name=result::$VERSION

    - name: Fetch version (Manual)
      id: manual_version
      if: github.event_name == 'workflow_dispatch'
      run: |
        VERSION=latest
        echo ::set-output name=result::$VERSION

    - name: Push Image
      run: |
        IMAGE_ID=${{ steps.image_name.outputs.result }}
        VERSION=${{ steps.release_version.outputs.result }}${{ steps.manual_version.outputs.result }}
        
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
